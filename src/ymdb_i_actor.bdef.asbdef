managed implementation in class zbp_mdb_i_actor unique;
with draft;

define behavior for YMDB_I_ACTOR alias Actor
persistent table YMDB_ACTOR
draft table YMDB_D_ACTOR
lock master total etag LastChangedAt
authorization master ( instance )
//etag master <field_name>
{
  association _Role { create; with draft; }

  create;
  update;
  delete;

  field(readonly, numbering : managed) ActorId;
  field(mandatory) LastName;
  field(readonly) Age;

  determination calculateAge on save {create; field BirthDay;}
  validation validateName on save {create; field LastName;}
  validation validateDate on save {create; field BirthDay;}

  draft determine action Prepare {
    validation validateDate;
    validation validateName;
    validation Role~validateImportancy;
    validation Role~validateTypeofActing;
    validation Role~validateMoviId;
    validation Role~validateRoleName;
  }

  mapping for ymdb_actor {
    ActorId = actor_id;
    FirstName = first_name;
    LastName = last_name;
    BirthDay = birth_day;
    BirthPlace = birth_place;
    BirthCountryId = birth_country_id;
    Age = age;
    LinkToImdb = link_to_imdb;
    ActorPicURL = actor_pic_url;
    LastChangedAt = last_changed_at;
  }
}

define behavior for YMDB_I_ROLE alias Role
implementation in class zbp_mdb_i_role unique
persistent table ymdb_role
draft table ymdb_d_role
lock dependent by _Actor
{
  association _Actor { with draft; }
  association _Movie { with draft; }

  field ( readonly ) ActorId;
  field ( numbering : managed, readonly ) RoleId;
  field ( mandatory ) RoleName, MovieId;

  validation validateImportancy on save {create; field Importancy; }
  validation validateTypeofActing on save {create; field TypeofActing; }
  validation validateMoviId on save {create; field MovieId; }
  validation validateRoleName on save {create; field RoleName; }

  update;
  delete;

  mapping for YMDB_ROLE
  {
    RoleId = role_id;
    ActorId = actor_id;
    MovieId = movie_id;
    RoleName = role_name;
    Importancy = importancy;
    TypeofActing = type_of_acting;
    LastChangedAt = last_changed_at;
  }
}